<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:cw="clr-namespace:Chanyi.Shepherd.WPF.Expands.Converter"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 悬停状态的画刷 -->
    <SolidColorBrush x:Key="HoverBackgroundBrushKey" Color="#E5F3FB" />
    <SolidColorBrush x:Key="HoverBorderBrushKey" Color="#70C0E7" />

    <!-- 选中(激活)状态的画刷 -->
    <SolidColorBrush x:Key="SelectedActiveBackgroundBrushKey" Color="#CBE8F6" />
    <SolidColorBrush x:Key="SelectedActiveBorderBrushKey" Color="#26A0DA" />
    <!--<SolidColorBrush x:Key="SelectedActiveBackgroundBrushKey" Color="#CBE8F6" Opacity="0"/>
    <SolidColorBrush x:Key="SelectedActiveBorderBrushKey" Color="#26A0DA" Opacity="0"/>-->

    <!-- 选中(悬停)状态的画刷 -->
    <SolidColorBrush x:Key="SelectedHoverBackgroundBrushKey" Color="#D1E8FF" />
    <SolidColorBrush x:Key="SelectedHoverBorderBrushKey" Color="#66A7E8" />

    <!-- 选中(失效)状态的画刷 -->
    <SolidColorBrush x:Key="SelectedInactiveBackgroundBrushKey" Color="#F7F7F7" />
    <SolidColorBrush x:Key="SelectedInactiveBorderBrushKey" Color="#DEDEDE" />

    <!-- TreeViewItem 的展开箭头 -->
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,5 L5,0 z" />
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="7" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Width="7" Height="26" Padding="0,5,0,5">
                        <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#989898" VerticalAlignment="Center"
							  Data="{StaticResource TreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="2.5" CenterY="2.5" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#1BBBFA" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#262626" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="#595959" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#1BBBFA" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="#82DFFB" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeViewItem 样式 -->
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <!-- 计算节点缩进的转换器 -->
                        <cw:IndentConverter Indent="12" MarginLeft="5" x:Key="IndentConverter" />
                    </ControlTemplate.Resources>
                    <StackPanel  VerticalAlignment="Center">
                        <Border x:Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="True">
                            <Grid Margin="{Binding Converter={StaticResource IndentConverter}, RelativeSource={RelativeSource TemplatedParent}}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="12" Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander"
											  Style="{StaticResource ExpandCollapseToggleStyle}"
											  IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
											  ClickMode="Press" Width="Auto" HorizontalAlignment="Left" 
											  Height="Auto" Margin="1,0,0,0" />
                                <!--<TextBlock Grid.Column="1" VerticalAlignment="Center">
                                    <Hyperlink TextDecorations="None">-->
                                <ContentPresenter x:Name="PART_Header"
												          ContentSource="Header" VerticalAlignment="Center" Grid.Column="1" Cursor="Hand"
												          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
												          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--</Hyperlink>
                                </TextBlock>-->
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource SelectedActiveBorderBrushKey}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource SelectedInactiveBorderBrushKey}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource SelectedInactiveBackgroundBrushKey}" />
                        </MultiTrigger>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource HoverBorderBrushKey}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource HoverBackgroundBrushKey}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource SelectedHoverBorderBrushKey}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource SelectedHoverBackgroundBrushKey}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" 
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>